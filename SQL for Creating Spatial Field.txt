-- Create Transformed table "AccFT"
DROP TABLE "ROAD"."roadsafety.data::RoadF.AccFT";

-- This created by viewing table def, exporting SQL and adding line near end ST_POINT
CREATE COLUMN TABLE "ROAD"."roadsafety.data::RoadF.AccFT" ("ACCREF" NVARCHAR(13) NOT NULL ,
	 "EASTING" INTEGER CS_INT,
	 "NORTHING" INTEGER CS_INT,
	 "LON" DECIMAL(12, 9) CS_FIXED,
	 "LAT" DECIMAL(12, 9) CS_FIXED,
	 "POLICEFORCE" INTEGER CS_INT,
	 "SEVERITY" INTEGER CS_INT,
	 "VEHCOUNT" INTEGER CS_INT,
	 "CASCOUNT" INTEGER CS_INT,
	 "ACCDATE" DAYDATE CS_DAYDATE,
	 "ACCDAY" INTEGER CS_INT,
	 "TIME" NVARCHAR(5),
	 "LOCALAUTH" INTEGER CS_INT,
	 "LOCALAUTHH" NVARCHAR(12),
	 "ROAD1CLASS" INTEGER CS_INT,
	 "ROAD1NUM" INTEGER CS_INT,
	 "ROAD1TYPE" INTEGER CS_INT,
	 "SPEEDLIMIT" INTEGER CS_INT,
	 "JUNCDETAIL" INTEGER CS_INT,
	 "JUNCCONTROL" INTEGER CS_INT,
	 "ROAD2CLASS" INTEGER CS_INT,
	 "ROAD2NUM" INTEGER CS_INT,
	 "PEDCROSSCON" INTEGER CS_INT,
	 "PEDCROSSFAC" INTEGER CS_INT,
	 "LIGHT" INTEGER CS_INT,
	 "WEATHER" INTEGER CS_INT,
	 "SURFACE" INTEGER CS_INT,
	 "SPECIAL" INTEGER CS_INT,
	 "HAZARD" INTEGER CS_INT,
	 "URBAN" INTEGER CS_INT,
	 "POLICEATSCENE" INTEGER CS_INT,
	 "LSOA" NVARCHAR(12),
	 "LATLON" ST_POINT(1000004326),
	 PRIMARY KEY ("ACCREF")) UNLOAD PRIORITY 5 AUTO MERGE 
	 
-- Fill it
-- This to fill copy table (wth ST_POINT on the end)
-- insert into "ROAD"."roadsafety.data::RoadF.AccFT"
-- (select *, NEW ST_Point(LAT,LON) from "ROAD"."roadsafety.data::RoadF.AccF"); 
	 
-- Check it
-- Check copy table
-- SELECT "ACCREF", "ACCDATE", "LAT", "LON", "LATLON".ST_AsGeoJSON() from "ROAD"."roadsafety.data::RoadF.AccFT";
-- Check SRID
-- SELECT "ACCREF", "ACCDATE", "LAT", "LON", "LATLON".ST_SRID() from "ROAD"."roadsafety.data::RoadF.AccFT";
